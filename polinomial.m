## Función Polinomial:## Output es una matriz donde cada columna contiene los precios calculados para cada ## orden polinomial.function precios=polinomial(X,Y,nareas,norm,method,orden)  ## Thetas disponibles hasta un orden polinomial de n=10  t0=[-1 -0.2 -0.3 0.1 -0.4 0.6 0.2 1 0.33 -0.57 0];  precios = [];    if (strcmp(method,"batch") == 1)    for n=orden      [thetas,~]=descentpoly(@loss,@gradloss,t0(:,1:n+1),X,Y,0.004,                            "method","batch","epsilon",0.005,"maxiter",300);      A = hypothesis(nareas',thetas(end,:));      precios = [precios norm.itransform(A)];    endfor   endif    if (strcmp(method,"stochastic") == 1)    for n=orden      [thetas,~]=descentpoly(@loss,@gradloss,t0(:,1:n+1),X,Y,0.001,                            "method","stochastic","epsilon",0.001,"maxiter",500,                            "minibatch",20);      A = hypothesis(nareas',thetas(end,:));      precios = [precios norm.itransform(A)];    endfor   endif    if (strcmp(method,"momentum") == 1)    for n=orden      [thetas,~]=descentpoly(@loss,@gradloss,t0(:,1:n+1),X,Y,0.003,                            "method","momentum","epsilon",0.001,"maxiter",500,                            "minibatch",20);      A = hypothesis(nareas',thetas(end,:));      precios = [precios norm.itransform(A)];    endfor   endif    if (strcmp(method,"rmsprop") == 1)    for n=orden      [thetas,~]=descentpoly(@loss,@gradloss,t0(:,1:n+1),X,Y,0.01,                            "method","rmsprop","epsilon",0.005,"maxiter",500,                            "beta",0.9,"beta2",0.95,"minibatch",20);      A = hypothesis(nareas',thetas(end,:));      precios = [precios norm.itransform(A)];    endfor   endif    if (strcmp(method,"adam") == 1)    for n=orden      [thetas,~]=descentpoly(@loss,@gradloss,t0(:,1:n+1),X,Y,0.05,                            "method","adam","epsilon",0.005,"maxiter",500,                            "beta",0.9,"minibatch",20);      A = hypothesis(nareas',thetas(end,:));      precios = [precios norm.itransform(A)];    endfor   endif  endfunction;  